{"ast":null,"code":"var _jsxFileName = \"C:\\\\Ivan_programming\\\\web-dev-project\\\\client\\\\src\\\\App.jsx\";\nimport React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Login from './screens/Login';\nimport Admin from './screens/Admin';\nimport Vendeur from './screens/Vendeur';\nimport Contact from './screens/Contact.jsx';\nimport Erreur from './screens/Erreur';\nimport Produit from './screens/Produit';\nimport Produits from './screens/Produits';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  async function checkPassword(passwordInput) {\n    try {\n      const response = await fetch('http://localhost:5000/api/checkpassword', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          'id': passwordInput\n        }) // body data type must match \"Content-Type\" header \n\n      });\n      const ready = await response.json();\n      return ready;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        children: /*#__PURE__*/_jsxDEV(Login, {\n          authorized: checkPassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 31\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/produits\",\n        children: /*#__PURE__*/_jsxDEV(Produits, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/produit\",\n        children: /*#__PURE__*/_jsxDEV(Produit, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/contact\",\n        children: /*#__PURE__*/_jsxDEV(Contact, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/contact\",\n        component: Contact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/vendeur\",\n        component: Vendeur\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/admin\",\n        component: Admin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        component: Erreur\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Ivan_programming/web-dev-project/client/src/App.jsx"],"names":["React","Route","Switch","Login","Admin","Vendeur","Contact","Erreur","Produit","Produits","App","checkPassword","passwordInput","response","fetch","method","headers","body","JSON","stringify","ready","json","error","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAO,aAAP;;;AAEA,SAASC,GAAT,GAAe;AAEb,iBAAeC,aAAf,CAA6BC,aAA7B,EAA4C;AAC1C,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAD,EAA4C;AACtEC,QAAAA,MAAM,EAAE,MAD8D;AAEtEC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAF6D;AAKtEC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAC,gBAAMP;AAAP,SAAf,CALgE,CAKzB;;AALyB,OAA5C,CAA5B;AAOA,YAAMQ,KAAK,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAApB;AACA,aAAOD,KAAP;AACD,KAVD,CAUE,OAAOE,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AAEF;;AACD,sBACE;AAAA,2BACE,QAAC,MAAD;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,GAAlB;AAAA,+BAAsB,QAAC,KAAD;AAAO,UAAA,UAAU,EAAEX;AAAnB;AAAA;AAAA;AAAA;AAAA;AAAtB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,WAAlB;AAAA,+BAA8B,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAA9B;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,UAAlB;AAAA,+BAA6B,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAA7B;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,UAAlB;AAAA,+BAA6B,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAA7B;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,UAAlB;AAA6B,QAAA,SAAS,EAAEL;AAAxC;AAAA;AAAA;AAAA;AAAA,cALF,eAME,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,UAAlB;AAA6B,QAAA,SAAS,EAAED;AAAxC;AAAA;AAAA;AAAA;AAAA,cANF,eAOE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,QAAlB;AAA2B,QAAA,SAAS,EAAED;AAAtC;AAAA;AAAA;AAAA;AAAA,cAPF,eAQE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,GAAZ;AAAgB,QAAA,SAAS,EAAEG;AAA3B;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;KAhCQG,G;AAkCT,eAAeA,GAAf","sourcesContent":["import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Login from './screens/Login';\nimport Admin from './screens/Admin';\nimport Vendeur from './screens/Vendeur';\nimport Contact from './screens/Contact.jsx';\nimport Erreur from './screens/Erreur';\nimport Produit from './screens/Produit';\nimport Produits from './screens/Produits';\nimport './style.css';\n\nfunction App() {\n\n  async function checkPassword(passwordInput) {\n    try {\n      const response = await fetch('http://localhost:5000/api/checkpassword', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({'id': passwordInput }) // body data type must match \"Content-Type\" header \n      })\n      const ready = await response.json()\n      return ready\n    } catch (error) { \n      console.log(error) \n    }\n    \n  }\n  return (\n    <div>\n      <Switch>\n        <Route exact path='/'><Login authorized={checkPassword} /></Route>\n        <Route exact path='/produits'><Produits /></Route>\n        <Route exact path='/produit'><Produit /></Route>\n        <Route exact path='/contact'><Contact /></Route>\n        <Route exact path='/contact' component={Contact} />\n        <Route exact path='/vendeur' component={Vendeur} />\n        <Route exact path='/admin' component={Admin} />\n        <Route path='*' component={Erreur} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}