{"ast":null,"code":"// import React from 'react'\n// import NavBar from '../components/NavBar';\n// function AddProduct() {\n//     return (\n//         <div>\n//             <NavBar />\n//             <main>\n//                 <article>\n//                 <h1>Ajouter votre propre recette!</h1>\n//                 <br />\n//                 <form className='form-group' id='ajouter-recette-form' onSubmit={addRecipe}>\n//                     <fieldset className='form-control'>\n//                     <legend>Ajouter les informations de la recette</legend>\n//                     {/* TODO : gérer le changement du nom de la Recette et l'événement onChange */}\n//                     <label htmlFor='name'>Nom de la recette:</label>\n//                     <input type='text' id='name' value={recipeInfos.name} onChange={(e) => {handleChange(e)}} required />\n//                     {/* TODO : gérer le changement du type de la Recette et l'événement onChange */}\n//                     <label htmlFor='type'>Sélectionner le type de recette:</label>\n//                     <select id='type' value={recipeInfos.type} onChange={(e) => {handleChange(e)}} required>\n//                         <option value='' disabled>\n//                         Choisissez\n//                         </option>\n//                         <option value='vegetarien'>Végétarienne</option>\n//                         <option value='mediterraneen'>Méditérranéenne</option>\n//                         <option value='keto'>Keto</option>\n//                         <option value='autre'>Autre</option>\n//                     </select>\n//                     {/* TODO : gérer le changement du temps de la Recette et l'événement onChange */}\n//                     <label htmlFor='time'>Temps de préparation (min):</label>\n//                     <input type='text' id='time' value={recipeInfos.time} onChange={(e) => {handleChange(e)}} required />\n//                     {/* TODO : gérer le changement des ingrédients de la Recette et l'événement onChange */}\n//                     <label htmlFor='ingredients'>\n//                         Ajouter la liste d'ingrédiants nécessaire (séparer les éléments (ingrédients:quantités) par une\n//                         virgule):\n//                     </label>\n//                     <input type='text' id='ingredients' value={recipeInfos.ingredients} onChange={(e) => {handleChange(e)}} required />\n//                     {/* TODO : gérer le changement des outils de la Recette et l'événement onChange */}\n//                     <label htmlFor='tools'>\n//                         Ajouter la liste des outils de cuisson nécessaire (séparer les éléments par une virgule):\n//                     </label>\n//                     <input type='text' id='tools' value={recipeInfos.tools} onChange={(e) => {handleChange(e)}} required />\n//                     {/* TODO : gérer le changement de l'image de la Recette et l'événement onChange */}\n//                     <label htmlFor='img'>Ajouter une image pour votre recette:</label>\n//                     <input type='file' id='img' accept='image/*' onChange={(e) => {handleChange(e)}} ref={imgRef} required />\n//                     </fieldset>\n//                     <fieldset className='form-control' id='etapes'>\n//                     <legend>Ajouter les étapes de la recette</legend>\n//                     {/* TODO : Ajouter le component StepForm pour chaque étape de la recette */}\n//                     {steps.map((step) => <StepForm key={step.order} step={step} onChange={updateStep} />)}\n//                     <input id='ajouter-etape' className='btn' type='button' value='Ajouter une étape' onClick={addStep} />\n//                     </fieldset>\n//                     <input className='btn' type='submit' value='Ajouter la recette' />\n//                 </form>\n//                 </article>\n//             </main>\n//         </div>\n//     )\n// }\n// export default Vendeur","map":{"version":3,"sources":["C:/Ivan_programming/web-dev-project/client/src/screens/AddProduct.jsx"],"names":[],"mappings":"AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import React from 'react'\r\n// import NavBar from '../components/NavBar';\r\n\r\n// function AddProduct() {\r\n//     return (\r\n//         <div>\r\n//             <NavBar />\r\n//             <main>\r\n//                 <article>\r\n//                 <h1>Ajouter votre propre recette!</h1>\r\n//                 <br />\r\n\r\n//                 <form className='form-group' id='ajouter-recette-form' onSubmit={addRecipe}>\r\n//                     <fieldset className='form-control'>\r\n//                     <legend>Ajouter les informations de la recette</legend>\r\n\r\n//                     {/* TODO : gérer le changement du nom de la Recette et l'événement onChange */}\r\n//                     <label htmlFor='name'>Nom de la recette:</label>\r\n//                     <input type='text' id='name' value={recipeInfos.name} onChange={(e) => {handleChange(e)}} required />\r\n\r\n//                     {/* TODO : gérer le changement du type de la Recette et l'événement onChange */}\r\n//                     <label htmlFor='type'>Sélectionner le type de recette:</label>\r\n//                     <select id='type' value={recipeInfos.type} onChange={(e) => {handleChange(e)}} required>\r\n//                         <option value='' disabled>\r\n//                         Choisissez\r\n//                         </option>\r\n//                         <option value='vegetarien'>Végétarienne</option>\r\n//                         <option value='mediterraneen'>Méditérranéenne</option>\r\n//                         <option value='keto'>Keto</option>\r\n//                         <option value='autre'>Autre</option>\r\n//                     </select>\r\n\r\n//                     {/* TODO : gérer le changement du temps de la Recette et l'événement onChange */}\r\n//                     <label htmlFor='time'>Temps de préparation (min):</label>\r\n//                     <input type='text' id='time' value={recipeInfos.time} onChange={(e) => {handleChange(e)}} required />\r\n\r\n//                     {/* TODO : gérer le changement des ingrédients de la Recette et l'événement onChange */}\r\n//                     <label htmlFor='ingredients'>\r\n//                         Ajouter la liste d'ingrédiants nécessaire (séparer les éléments (ingrédients:quantités) par une\r\n//                         virgule):\r\n//                     </label>\r\n//                     <input type='text' id='ingredients' value={recipeInfos.ingredients} onChange={(e) => {handleChange(e)}} required />\r\n\r\n//                     {/* TODO : gérer le changement des outils de la Recette et l'événement onChange */}\r\n//                     <label htmlFor='tools'>\r\n//                         Ajouter la liste des outils de cuisson nécessaire (séparer les éléments par une virgule):\r\n//                     </label>\r\n//                     <input type='text' id='tools' value={recipeInfos.tools} onChange={(e) => {handleChange(e)}} required />\r\n\r\n//                     {/* TODO : gérer le changement de l'image de la Recette et l'événement onChange */}\r\n//                     <label htmlFor='img'>Ajouter une image pour votre recette:</label>\r\n//                     <input type='file' id='img' accept='image/*' onChange={(e) => {handleChange(e)}} ref={imgRef} required />\r\n//                     </fieldset>\r\n//                     <fieldset className='form-control' id='etapes'>\r\n//                     <legend>Ajouter les étapes de la recette</legend>\r\n//                     {/* TODO : Ajouter le component StepForm pour chaque étape de la recette */}\r\n//                     {steps.map((step) => <StepForm key={step.order} step={step} onChange={updateStep} />)}\r\n//                     <input id='ajouter-etape' className='btn' type='button' value='Ajouter une étape' onClick={addStep} />\r\n//                     </fieldset>\r\n\r\n//                     <input className='btn' type='submit' value='Ajouter la recette' />\r\n//                 </form>\r\n//                 </article>\r\n//             </main>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default Vendeur\r\n"]},"metadata":{},"sourceType":"module"}