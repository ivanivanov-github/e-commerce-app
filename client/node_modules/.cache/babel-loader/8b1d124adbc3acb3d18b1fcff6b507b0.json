{"ast":null,"code":"import httpService from \"./http.service\";\n\nclass ProductFormService {\n  constructor() {\n    this.httpService = httpService;\n  }\n\n  async submitForm(productInfos) {\n    const product = {\n      nom: productInfos.nom,\n      src: \"\",\n      compagnieRetailer: productInfos.compagnieRetailer,\n      categorie: productInfos.categorie,\n      img: await this.getImageFile(productInfos.img),\n      prix: productInfos.prix,\n      rating: productInfos.rating,\n      comments: []\n    };\n    this.httpService.addNewProduct(product);\n  }\n\n  async getImageFile(file) {\n    const image = await new Promise(resolve => {\n      const reader = new FileReader();\n\n      reader.onload = () => resolve(reader.result);\n\n      reader.readAsDataURL(file);\n    });\n    return image;\n  }\n\n}\n\nconst productFormService = new ProductFormService();\nexport default productFormService;","map":{"version":3,"sources":["C:/Ivan_programming/web-dev-project/client/src/services/productForm.service.js"],"names":["httpService","ProductFormService","constructor","submitForm","productInfos","product","nom","src","compagnieRetailer","categorie","img","getImageFile","prix","rating","comments","addNewProduct","file","image","Promise","resolve","reader","FileReader","onload","result","readAsDataURL","productFormService"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,kBAAN,CAAyB;AACvBC,EAAAA,WAAW,GAAG;AACZ,SAAKF,WAAL,GAAmBA,WAAnB;AACD;;AAEe,QAAVG,UAAU,CAACC,YAAD,EAAe;AAC7B,UAAMC,OAAO,GAAG;AACdC,MAAAA,GAAG,EAAEF,YAAY,CAACE,GADJ;AAEdC,MAAAA,GAAG,EAAE,EAFS;AAGdC,MAAAA,iBAAiB,EAAEJ,YAAY,CAACI,iBAHlB;AAIdC,MAAAA,SAAS,EAAEL,YAAY,CAACK,SAJV;AAKdC,MAAAA,GAAG,EAAE,MAAM,KAAKC,YAAL,CAAkBP,YAAY,CAACM,GAA/B,CALG;AAMdE,MAAAA,IAAI,EAAER,YAAY,CAACQ,IANL;AAOdC,MAAAA,MAAM,EAAET,YAAY,CAACS,MAPP;AAQdC,MAAAA,QAAQ,EAAE;AARI,KAAhB;AAWA,SAAKd,WAAL,CAAiBe,aAAjB,CAA+BV,OAA/B;AACD;;AAEiB,QAAZM,YAAY,CAACK,IAAD,EAAO;AACvB,UAAMC,KAAK,GAAG,MAAM,IAAIC,OAAJ,CAAaC,OAAD,IAAa;AAC3C,YAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AACAD,MAAAA,MAAM,CAACE,MAAP,GAAgB,MAAMH,OAAO,CAACC,MAAM,CAACG,MAAR,CAA7B;;AACAH,MAAAA,MAAM,CAACI,aAAP,CAAqBR,IAArB;AACD,KAJmB,CAApB;AAMA,WAAOC,KAAP;AACD;;AA5BsB;;AA+BzB,MAAMQ,kBAAkB,GAAG,IAAIxB,kBAAJ,EAA3B;AACA,eAAewB,kBAAf","sourcesContent":["import httpService from \"./http.service\";\r\n\r\nclass ProductFormService {\r\n  constructor() {\r\n    this.httpService = httpService;\r\n  }\r\n\r\n  async submitForm(productInfos) {\r\n    const product = {\r\n      nom: productInfos.nom,\r\n      src: \"\",\r\n      compagnieRetailer: productInfos.compagnieRetailer,\r\n      categorie: productInfos.categorie,\r\n      img: await this.getImageFile(productInfos.img),\r\n      prix: productInfos.prix,\r\n      rating: productInfos.rating,\r\n      comments: [],\r\n    };\r\n\r\n    this.httpService.addNewProduct(product);\r\n  }\r\n\r\n  async getImageFile(file) {\r\n    const image = await new Promise((resolve) => {\r\n      const reader = new FileReader();\r\n      reader.onload = () => resolve(reader.result);\r\n      reader.readAsDataURL(file);\r\n    });\r\n\r\n    return image;\r\n  }\r\n}\r\n\r\nconst productFormService = new ProductFormService();\r\nexport default productFormService;\r\n"]},"metadata":{},"sourceType":"module"}