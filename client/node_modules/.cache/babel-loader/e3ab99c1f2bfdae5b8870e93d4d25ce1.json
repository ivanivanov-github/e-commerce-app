{"ast":null,"code":"import httpService from './http.service';\n\nclass CommentFormService {\n  constructor() {\n    this.httpService = httpService;\n  }\n\n  async submitForm(commentInfos) {\n    const comment = {\n      productId: commentInfos.productId,\n      user: commentInfos.user,\n      comment: commentInfos.comment\n    };\n    this.httpService.addNewComment(comment);\n  }\n\n  async getImageFile(file) {\n    const image = await new Promise(resolve => {\n      const reader = new FileReader();\n\n      reader.onload = () => resolve(reader.result);\n\n      reader.readAsDataURL(file);\n    });\n    return image;\n  }\n\n}\n\nconst commentFormService = new CommentFormService();\nexport default commentFormService;","map":{"version":3,"sources":["C:/Ivan_programming/web-dev-project/client/src/services/commentForm.service.js"],"names":["httpService","CommentFormService","constructor","submitForm","commentInfos","comment","productId","user","addNewComment","getImageFile","file","image","Promise","resolve","reader","FileReader","onload","result","readAsDataURL","commentFormService"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,kBAAN,CAAyB;AACvBC,EAAAA,WAAW,GAAG;AACZ,SAAKF,WAAL,GAAmBA,WAAnB;AACD;;AAEe,QAAVG,UAAU,CAACC,YAAD,EAAe;AAC7B,UAAMC,OAAO,GAAG;AACdC,MAAAA,SAAS,EAAEF,YAAY,CAACE,SADV;AAEdC,MAAAA,IAAI,EAAEH,YAAY,CAACG,IAFL;AAGdF,MAAAA,OAAO,EAAED,YAAY,CAACC;AAHR,KAAhB;AAMA,SAAKL,WAAL,CAAiBQ,aAAjB,CAA+BH,OAA/B;AACD;;AAEiB,QAAZI,YAAY,CAACC,IAAD,EAAO;AACvB,UAAMC,KAAK,GAAG,MAAM,IAAIC,OAAJ,CAAaC,OAAD,IAAa;AAC3C,YAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AACAD,MAAAA,MAAM,CAACE,MAAP,GAAgB,MAAMH,OAAO,CAACC,MAAM,CAACG,MAAR,CAA7B;;AACAH,MAAAA,MAAM,CAACI,aAAP,CAAqBR,IAArB;AACD,KAJmB,CAApB;AAMA,WAAOC,KAAP;AACD;;AAvBsB;;AA0BzB,MAAMQ,kBAAkB,GAAG,IAAIlB,kBAAJ,EAA3B;AACA,eAAekB,kBAAf","sourcesContent":["import httpService from './http.service';\r\n\r\nclass CommentFormService {\r\n  constructor() {\r\n    this.httpService = httpService;\r\n  }\r\n\r\n  async submitForm(commentInfos) {\r\n    const comment = {\r\n      productId: commentInfos.productId,\r\n      user: commentInfos.user,\r\n      comment: commentInfos.comment\r\n    };\r\n\r\n    this.httpService.addNewComment(comment);\r\n  }\r\n\r\n  async getImageFile(file) {\r\n    const image = await new Promise((resolve) => {\r\n      const reader = new FileReader();\r\n      reader.onload = () => resolve(reader.result);\r\n      reader.readAsDataURL(file);\r\n    });\r\n\r\n    return image;\r\n  }\r\n}\r\n\r\nconst commentFormService = new CommentFormService();\r\nexport default commentFormService;\r\n"]},"metadata":{},"sourceType":"module"}