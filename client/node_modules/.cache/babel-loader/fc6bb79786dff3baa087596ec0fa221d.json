{"ast":null,"code":"var _jsxFileName = \"C:\\\\Ivan_programming\\\\web-dev-project\\\\client\\\\src\\\\screens\\\\Login.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport authService from \"../services/auth.service\";\nimport { Tokens } from \"../Auth_Tokens/Tokens\";\nimport \"../style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n\n  const [loginInfos, setLoginInfos] = useState({\n    user: '',\n    password: '',\n    confirmPassword: ''\n  }); // const [password, setPassword] = useState(\"\");\n\n  let history = useHistory();\n\n  async function handleAuthorized() {\n    const authResult = await authService.checkPassword(loginInfos);\n\n    if (!authResult.result) {\n      window.alert(\"Wrong credentials, try again\");\n    } else {\n      Tokens.users[0].user1.user1AuthToken = true;\n      history.push(\"/home\");\n    }\n  } // const handleChange = (e) => {\n  //   setPassword(e.target.value);\n  // };\n\n\n  const handleChange = e => {\n    const loginInfosCopy = { ...loginInfos\n    };\n    loginInfosCopy[e.target.id] = e.target.value;\n    setLoginInfos(loginInfosCopy);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-bg-img\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            alt: \"login\",\n            src: \"img/shoes.jpg\",\n            id: \"login-img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"title\",\n            children: \"E-COMMERCE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-button-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-center\",\n              children: \"Sign up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"Email:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"testUserName\",\n              children: \"(user@gmail.com)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"user\",\n              value: loginInfos.user,\n              onChange: e => {\n                handleChange(e);\n              },\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: \"Password:     \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"testPassword\",\n              children: \"(1234)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"password\",\n              value: loginInfos.password,\n              onChange: e => {\n                handleChange(e);\n              },\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password-confirm\",\n              children: \"Confirm Password:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"testConfirmPassword\",\n              children: \"(1234)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"confirmPassword\",\n              value: loginInfos.confirmPassword,\n              onChange: e => {\n                handleChange(e);\n              },\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"bn1 bn2\",\n            onClick: handleAuthorized,\n            children: \"Sign in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Login, \"qikfUA00cWkGTAzlJDkZHVUmtoE=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Ivan_programming/web-dev-project/client/src/screens/Login.jsx"],"names":["React","useState","useHistory","authService","Tokens","Login","loginInfos","setLoginInfos","user","password","confirmPassword","history","handleAuthorized","authResult","checkPassword","result","window","alert","users","user1","user1AuthToken","push","handleChange","e","loginInfosCopy","target","id","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport authService from \"../services/auth.service\";\r\nimport { Tokens } from \"../Auth_Tokens/Tokens\";\r\nimport \"../style.css\";\r\n\r\nexport default function Login() {\r\n  const[loginInfos, setLoginInfos] = useState({\r\n    user: '',\r\n    password: '',\r\n    confirmPassword: ''\r\n  })\r\n  // const [password, setPassword] = useState(\"\");\r\n  let history = useHistory();\r\n\r\n  async function handleAuthorized() {\r\n    const authResult = await authService.checkPassword(loginInfos);\r\n    if (!authResult.result) {\r\n      window.alert(\"Wrong credentials, try again\")\r\n    } else {\r\n      Tokens.users[0].user1.user1AuthToken = true;\r\n      history.push(\"/home\");\r\n    }\r\n  }\r\n\r\n  // const handleChange = (e) => {\r\n  //   setPassword(e.target.value);\r\n  // };\r\n\r\n  const handleChange = (e) => {\r\n    const loginInfosCopy = { ...loginInfos };\r\n    loginInfosCopy[e.target.id] = e.target.value;\r\n    setLoginInfos(loginInfosCopy);\r\n};\r\n\r\n  return (\r\n    <>\r\n      <div className=\"login-bg-img\">\r\n        <div className=\"login-container\">\r\n          <div className=\"image-container\">\r\n            <img alt=\"login\" src=\"img/shoes.jpg\" id=\"login-img\" />\r\n            <h1 className=\"title\">E-COMMERCE</h1>\r\n          </div>\r\n          <div className=\"form-button-container\">\r\n            <form className=\"form-group\">\r\n              <h2 className=\"text-center\">Sign up</h2>\r\n              <label htmlFor=\"email\">Email:</label>\r\n              <label htmlFor=\"testUserName\">(user@gmail.com)</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"user\"\r\n                value={loginInfos.user}\r\n                onChange={(e) => {\r\n                  handleChange(e);\r\n                }}\r\n                required\r\n              />\r\n\r\n              <label htmlFor=\"password\">Password:     </label> \r\n              <label htmlFor=\"testPassword\">(1234)</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"password\"\r\n                value={loginInfos.password}\r\n                onChange={(e) => {\r\n                  handleChange(e);\r\n                }}\r\n                required\r\n              />\r\n\r\n              <label htmlFor=\"password-confirm\">Confirm Password:</label>\r\n              <label htmlFor=\"testConfirmPassword\">(1234)</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"confirmPassword\"\r\n                value={loginInfos.confirmPassword}\r\n                onChange={(e) => {\r\n                  handleChange(e);\r\n                }}\r\n                required\r\n              />\r\n            </form>\r\n            <button className=\"bn1 bn2\" onClick={handleAuthorized}>\r\n              Sign in\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}